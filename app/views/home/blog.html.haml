%h3 A Hackternooner's Blog
%img(src="/assets/danbikle.jpeg")
%br/

%a(href='#h3_2012_0502') 2012-05-02 Dan's Rails Class
%br/
%a(href='#h3_2012_0423') 2012-04-23 Looking for a Co-Founder?
%br/
%a(href='#h3_2012_0411') 2012-04-11 Cucumber: Life Cycle of a Hackternoon-Rails Project
%br/
%a(href='#h3_2012_0318') 2012-03-18 Hackternoon.com replaces a pad of paper
%br/

%hr#rails_class/
%h3#h3_2012_0502 2012-05-02 Dan's Rails Class

%p I have worked with Unix since 1985, Relational Databases since 1987, and Rails since 2005.

%p I offer preparation services (at $79 / hour) for the Online Berkeley SaaS (Ruby on Rails) Course.

%p The Berkeley SaaS class starts May 18 2012.

%p Here are URLs related to the (free as in $0.00) Berkeley class:

%a(href='http://www.coursera.org/course/saas' target='x')
  https://www.coursera.org/course/saas
%br/
%br/

%a(href='http://www.youtube.com/watch?feature=player_embedded&v=jCory8n6WEY' target='x')
  http://www.youtube.com/watch?feature=player_embedded&v=jCory8n6WEY
%br/
%br/

The first  URL lists these URLs as references:
%br/
%br/

%a(href='http://ruby-doc.org/' target='x')
  http://ruby-doc.org/
%br/
%br/
%a(href='http://ruby-doc.org/docs/ProgrammingRuby/' target='x')
  http://ruby-doc.org/docs/ProgrammingRuby/
%br/
%br/
%a(href='http://api.rubyonrails.org/' target='x')
  http://api.rubyonrails.org/
%br/
%br/

%a(href='http://guides.rubyonrails.org/' target='x')
  http://guides.rubyonrails.org/
%br/
%br/

%a(href='http://rubyonrails.org/' target='x')
  http://rubyonrails.org/
%br/
%br/

%a(href='http://cukes.info/' target='x')
  http://cukes.info/
%br/
%br/

%a(href='http://rspec.info/' target='x')
  http://rspec.info/
%br/
%br/

%a(href='http://www.w3.org/Style/CSS/Overview.en.html' target='x')
  http://www.w3.org/Style/CSS/Overview.en.html
%br/
%br/

%a(href='http://www.w3.org/html/wg/' target='x')
  http://www.w3.org/html/wg/
%br/
%br/

%a(href='http://haml-lang.com/' target='x')
  http://haml-lang.com/
%br/
%br/

%a(href='http://martinfowler.com/eaaCatalog/' target='x')
  http://martinfowler.com/eaaCatalog/
%br/
%br/

%a(href='http://book.git-scm.com/' target='x')
  http://book.git-scm.com/
%br/
%br/

%a(href='http://devcenter.heroku.com/articles/rails3' target='x')
  http://devcenter.heroku.com/articles/rails3
%br/
%br/

%a(href='http://railsforzombies.com/' target='x')
  http://railsforzombies.com/
%br/
%br/


Books:
%br/
%br/
%a(href='http://ruby.railstutorial.org/' target='x')
  http://ruby.railstutorial.org/
%br/
%br/

%a(href='http://pragprog.com/book/achbd/the-rspec-book' target='x')
  http://pragprog.com/book/achbd/the-rspec-book
%br/
%br/

%a(href='http://pragprog.com/book/hwcuc/the-cucumber-book' target='x')
  http://pragprog.com/book/hwcuc/the-cucumber-book
%br/
%br/

%a(href='http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882' target='x')
  http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882
%br/
%br/

%a(href='http://www.amazon.com/Rubyisms-in-Rails-ebook/dp/B000P28WJO' target='x')
  http://www.amazon.com/Rubyisms-in-Rails-ebook/dp/B000P28WJO
%br/
%br/

%a(href='http://pragprog.com/book/tsgit/pragmatic-version-control-using-git' target='x')
  http://pragprog.com/book/tsgit/pragmatic-version-control-using-git
%br/
%br/

%a(href='http://www.sitepoint.com/books/cssdesign1/' target='x')
  http://www.sitepoint.com/books/cssdesign1/
%br/
%br/

%a(href='http://www.amazon.com/Flexible-Reliable-Software-Development-Textbooks/dp/1420093622' target='x')
  http://www.amazon.com/Flexible-Reliable-Software-Development-Textbooks/dp/1420093622
%br/
%br/

%a(href='http://saasbook.info/' target='x')
  http://saasbook.info/
%br/
%br/


%p The Berkeley class moves FAST and will leave you in the dust if you are not prepared for it.

%p
  Based on the class description and the URLs listed above,
  I'd suggest you build and deploy some Rails sites before class starts.

%p I'm well qualified to teach you that skill quickly.

%p The outline of my approach is simple:

%ol
  %li Teach you the Bash shell.
  %li Teach you an effective editor (Emacs).
  %li Teach you Rails.

%p If you already know 1 and 2, we can jump right into step 3.

%p I list details to the above outline here:

%ol
  %li
    %a(href='http://hackternoon.com/tech_tips/#bash_class' target='x')
      http://hackternoon.com/tech_tips/#bash_class
  %li
    %a(href='http://hackternoon.com/tech_tips/#emacs' target='x')
      http://hackternoon.com/tech_tips/#emacs
  %li
    %a(href='http://hackternoon.com/tech_tips/#rails' target='x')
      http://hackternoon.com/tech_tips/#rails

%p Also, the Berkeley class REQUIRES that you have access to a Mac or machine running Linux.

%p
  If you only have a Windows machine, the Berkeley class suggests you use "Virtual Box".
  I can help you install "Virtual Box" on your Windows machine.

%p What is the cost?

%p I charge $79 / hour (payable in advance).

%p
  If you cannot afford that,
  then think of a Rails site/project you want to build and post that project at the URL listed below:

%a(href='http://hackternoon.com/projects' target='x')
  http://hackternoon.com/projects
%br/
%br/
%p
  I'll then try to find another student like yourself.
  You two could then teach each other.
  By May 18, you two could ready for the Berkeley SaaS (Ruby on Rails) class.

%hr/
%h3#h3_2012_0423 2012-04-23 Looking for a Co-Founder?
%p
  After I learned Rails in 2005 I became a magnet for Co-Founders looking for technical Co-founders.
  I've listened to maybe over 100 pitches for me to join a startup.
  I've actually followed up on 5 of them.
  I gained several thousand hours of software development skills and many personal contacts, but little financial gain.
  One obvious thing I learned is that I need to be more diligent about vetting future business partners.

%p
  My current strategy is to use Hackternoon.com as a low barrier for them to jump.
  I will start asking potential Co-Founders to create a small project on Hackternoon.com.
  Obviously, this request should give me some insight about them.
  Can they deal with a simple registration process?
  Do they have the imagination to describe an interesting project which can be done in 5 hours?
  Can they articulate a compelling pitch to join the project with one simple paragraph?
  Do they see this as a waste of time which distracts them from the "real" goal?

%p
  This process reminds me a little bit of what a typical coder needs to do to join a funded startup.
  Usually at the interview the coder is asked to write some code.
  I'm hopeful this idea related to vetting potential Co-Founders will save me a lot of time.  
  A typical Co-Founder pitch happens over coffee at a cafe.
  The minimum pitch duration is about 90 minutes when I add in driving.
  So far I've asked three potential Co-Founders to pitch a project on Hackternoon.com.
  They have not pitched yet so I probably just added 270 minutes to my life.

%p
  Also searching for a Co-Founder is like searching for a spouse.  Often I compare Hackternoon.com 
  to a a dating site.  If I searched for a spouse on a dating site, I'd want to know if potential
  spouses are open to my ideas of fun dates.  Would they be open to a wide variety of date activities
  from bowling to sky-diving?  Or are they rigid in their expectations about what an ideal date
  should be and are they focused more on getting married rather than enjoying the search for a spouse?

%br/
%hr/

%h3#h3_2012_0411 2012-04-11 Cucumber: Life Cycle of a Hackternoon-Rails Project

When I do a Hackternoon-Rails Project, I start with "Cucumber".
%br/
%br/

I list a great video below:
%br/
%a(href="http://railscasts.com/episodes/155-beginning-with-cucumber" target="r")
  http://railscasts.com/episodes/155-beginning-with-cucumber

%br/
%br/
Also this site is excellent:
%br/

%a(href="http://cukes.info/" target="c")
  http://cukes.info/

%br/
%br/
%p
  Cucumber is an English-like language which commands an imaginary-robot who types commands at a browser.
  If the site behaves like it should, the robot stays green (like a cucumber).
  But if the site does not behave like you want, the robot turns red.

%p
  Who controls the robot?
  You, the "Product Manager" should describe what the robot does, using the Cucumber language.
  If you read something written in Cucumber you might say, "This is like talking to a robot!"
  So, that is the idea.

%p
  Once you write a decent set of Cucumber files you give them to a Rails programmer.
  He/She uses them to get a web site up and walking over a period of days or weeks.

%p
  Eventually he/she will create a page which does nothing because we have no Cucumber for it.
  So, you write more Cucumber which describes what the page should do when the robot presses a button or follows a link.
  At that point you are in a cycle where you write Cucumber and the programmer builds pages.
  Eventually the cycle ends and the site behaves the way you want.

%p
  Next, you are ready to "style" the site.
  Some product managers like to style site early, before it behaves the way they want.
  I will not say that is stupid, but it seems sub-optimal.

%p
  But, if you are in a situation where you need to sell the idea behind
  the site, styling some of the pages like the home page, registration,
  and login might be worthy of effort.

%p
  An easy way to get started with styling is for you to use colored pencils and white paper
  to describe what each page looks like.
  The programmer then transforms those drawings into a styled set of pages.

%p
  Once the site behaves correctly and you have it styled with polish, you open the site to the public.
  Some users may love the site.
  Others will encounter bugs and ask for enhancements.

%p
  Then you enter another cycle where you again use Cucumber to describe how the site behaves
  when the bugs are gone and the enhancements are in place.
  At this point the robot should turn red when it encounters bugs or missing enhancements.
  The programmer then writes code which makes site behavior turn the robot green.

%p
  When you start writing Cucumber you will write steps which confuse the imaginary-robot.
  That's okay; the Rails programmer is tasked with fixing broken software which includes broken Cucumber.

%br/
%br/
%hr/
%h3#h3_2012_0318 2012-03-18 Hackternoon.com replaces a pad of paper

I started the Hackternoon Meetup at Hacker Dojo in Mountain View California on July 19, 2011:
%br/
%br/
%a(href="http://meetup.com/Hackternoon" target="m")
  Meetup.com/Hackternoon
%br/
%br/
I organized the Hackternoon projects using a simple pad of paper with three columns.
%br/
%br/
Most Sundays a group of Hackternooners would show up and gravitate towards the pad of paper where they could exchange 3 pieces of information:
%br/
%br/
%ul
  %li - Name and/or E-Mail Address
  %li - What they know or are willing to share
  %li - What they want to learn from another Hackternooner

Then, I would try to optimally create pairs of Hackternooners who would then use paired programming and shared learning to build and deploy a small project in a "Hackternoon".

%br/
%br/
You are now looking at the website which replaces the pad of paper.
%br/
%br/
The primary use-case of the site is similar to how we used the pad of paper:
%br/
%br/

%ul
  %li - After one time registration, you login
  %li - You create a project
  %li - You add tags and a description to the project
  %li - You invite 1 or more Hackternooners to work with you on the project

A secondary use-case is listed below:
%br/
%br/

%ul
  %li - After one time registration, you login
  %li - You look at other projects
  %li - If you find one you like, you ask the owner to invite you to collaborate.

The site has powerful features over the pad of paper:
%br/
%br/

%ul
  %li - You don't need to attend the Meetup to gain value from it
  %li - Pair-building could happen purely over the net
  %li - The pad of paper is wiped clean each week; the site is permanent

