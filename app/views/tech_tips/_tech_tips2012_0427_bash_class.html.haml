%h3#h3_2012_0427 2012-04-27 Rails Prerequesite: UNIX Shell (Bash Class)
.bash_class
  %p
    I've taught Rails to a wide variety of people since 2006.
    Obviously teaching Rails allows me to gain a deeper understanding of it.
    Also I have bumped into people and situations where teaching Rails seems "smooth".
  
  %p
    Other times though, teaching Rails is a cumbersome chore.
    Teaching Rails is usually difficult if the student lacks knowledge and ability related these two topics:
  %ul
    %li The UNIX Shell
    %li An effective editor
  
  %p
    Another issue which often comes up is the user wants to learn Rails on a windows laptop.
    For that situation, I claim lack of experience with windows and I tell the user to look for tutorials on the web.
    It is possible, however, to use a windows laptop to learn what I call "Rails Prerequesites".
  
  
  %p
    So, I am now focused on the task of building course content for two classes:
  
  %ul
    %li Rails Prerequesite: UNIX Shell (Bash Class)
    %li Rails Prerequesite: Effective Editors (Vim, Sed, and Emacs)
  
  %p
    One assumption I have about the Effective Editors class is that if I can teach users how to write code with Vim and Emacs,
    they should be able to teach themselves Sublime Text and/or TextMate.
  
  %p
    I'm not sure the same can be said for an IDE like RubyMine.
    I've spent 30 minutes with RubyMine and I've seen a new student struggle with it.
    My impression is that it acts well as an editor but it confused us when we tried to use it for running shell commands.
    Also we tried using it to step through code with the built-in debugger.
    That did not work at all; inside of RubyMine the debugger just issued error messages.
    Outside of RubyMine in a normal shell, the debugger worked fine.
    Eventually we gave up and used RubyMine only as an editor.
    Enough about RubyMine.
  
  %p
    
  
  %p
    On with the post;    I list below a general outline of Rails Prerequesite: UNIX Shell (Bash Class).
  
  %p
    Bash Class is about dealing with the Bash shell prompt.
    The class is not about writing Bash shell scripts.  
    To do that I assume you need a class on Effective Editors and that class comes after this class.
  
  %h4 Topic: Finding a Bash shell prompt.
  %section.round_corner15px.background_color_eee
    Duration: It depends on laptop type.
  
    %p
      On Mac just start the terminal app.
    
    %p
      Estimated Duration(on Mac): 1 Minute.
    
    %p.bold
      On Windows it is a chore.
    %ul
      %li
        Option 1 (best option)
        %br/
        Ask Google: How do I install Cygwin?
        %br/
        Estimated Duration: 40 Minutes.
      %li
        Option 2 (time consuming)
        %br/
        Ask Google: How do I install VMware Player on Windows to Run Ubuntu?
        %br/
        Estimated Duration: 180 Minutes!
      %li
        Option 3 (Requires Credit Card. Costs $0.02 / hour)
        %br/
        Google: How do I install Ubuntu on Rackspace Cloud?
        %br/
        Estimated Duration: 60 Minutes.
      %li
        Option 4 (Similar but more difficult than Rackspace)
        %br/
        Google: How do I install Ubuntu on Amazon EC2?
        %br/
        Estimated Duration: 90 Minutes.
        %br/
        %br/

  %br/
  
  %h4 Topic: Bash shell prompt found, Now learn shell commands related to "Directories".
  %section.round_corner15px.background_color_eee
    Estimated Duration: 15 min
    %p
      Jargon tip: Directory is the UNIX word for Folder; it contains files and other directories.
    %p
      We try and discuss the shell commands listed below:
    .bashcmd
      ls
      %br/
      ls -l
      %br/
      ls -la
      %br/
      ls -lat
      %br/
      ls -latr
      %br/
      %br/
      cd
      %br/
      dc
    %br/
    dc can trap you.
    %br/
    you get out of dc by typing "q"
    %br/
    %br/
    .bashcmd
      cd /usr/lib
      %br/
      cd .
      %br/
      cd ..
      %br/
      cd ../..
      %br/
      %br/
      pwd
      %br/
      %br/
      mkdir
      %br/
      mkdir -p
      %br/
      rmdir
      %br/
      rm
      %br/
      rm -f
      %br/
      rm -rf
    %br/
    %br/
    single-quote
    %br/
    single-quote can trap you
    %br/
    you get out by typing another single-quote
    %br/
    %br/
    %p.bold Quiz:
    %ul
      %li How is behavior ls -lat different that ls -latr ?
      %li When or why would I want to run ls -latr ?
      %li When or why would I want to run just "cd" ?
      %li What does "cd ." do?
      %li Is dc useful?
      %li What is a file system?
      %li What are some important directories and what purpose do they serve?
    %br/
  
  %br/  
  %br/  
  %h4 Topic: Now, I know commands to manipulate directories. Next, I learn the command line.
  %section.round_corner15px.background_color_eee
    Estimated Duration: 15 min
    %p No lecture, just a quiz!
    %p.bold Quiz:
    %ul  
      %li What is a command line?
      %li On a command line, why is the arrow key (sometimes) your friend?
      %li On a command line, why is the tab-key useful?
      %li On a command line, How do I go backwards exactly 2 words?
      %li On a command line, How do I go forward exactly 1 word?
      %li On a command line, How do I erase 1 word in front of me?
      %li On a command line, How do I erase all words in front of me?
      %li On a command line, How do I load the last command I ran?
      %li The command line is "stuck", what can I do?
    %br/

  %br/
  %br/  
  %h4 Topic: More shell commands, these related to files and sometimes directories:
  %section.round_corner15px.background_color_eee
    Estimated Duration: 15 min
    %p
      We try and discuss the shell commands listed below:
    .bashcmd
      cp
      %br/
      cp -p
      %br/
      mv
      %br/
      touch
    %br/  
    %p.bold Quiz:
    %ul
      %li How is cp -p different than cp?
      %li Why is mv called "mv"?
      %li Does cp work on a directory?
      %li In some situations, mv could have another name. What's that name?
      %li In some situations, mv has the perfect name. What are those situations?
      %li Is touch useful?
    %br/
  %br/
  %br/
  %h4 Topic: More shell commands, these related to files:
  %section.round_corner15px.background_color_eee  
    Estimated Duration: 60 min
    %p
      We try and discuss the shell commands listed below:
    .bashcmd
      pg
      %br/
      more
      %br/
      cat
      %br/
      grep
      %br/
      head
      %br/
      tail
      %br/
      sort
      %br/
      chmod
      %br/
      file
      %br/
      tar
      %br/
      rsync
      %br/
      zip
      %br/
      strings
      %br/
      wc
      %br/
      du
      %br/
      df
      %br/
      find
      %br/
      which
      %br/
      >
      %br/
      |
      %br/
      %br/
    %p.bold Quiz:
    %ul
      %li Why use pg instead of more?
      %li Why use pg instead of cat?
      %li Why use more instead of pg?
      %li How can cat simulate cp?
      %li What is a better name for grep?
      %li What are the dangers of cat?
      %li What are the dangers of chmod?
      %li How can | hang my terminal?
      %li What is stdout?
      %li What is stderr?
      %li How much disk-space you have now?
      %li How much disk-space are you using?
      %li How big is the largest file you can find?
      %li What is the most common option for wc?
      %li What is the best way to copy a directory to another directory?
      %li What is the best way to move a directory to another directory?
      %li What is the best way to rename a directory?
    %br/
  
  %br/
  %br/  
  %h4 Topic: More shell commands, these related to the computer:
  %section.round_corner15px.background_color_eee  
    Estimated Duration: 30 min
    %p
      We try and discuss the shell commands listed below:
    .bashcmd
      ssh
      %br/
      w
      %br/
      who
      %br/
      ps
      %br/
      date
      %br/
      uptime
      %br/
      top
      %br/
    %br/
    %p.bold Quiz:
    %ul
      %li How long has your computer been "up"?
      %li According to your Bash, what time is it right now?
      %li How many processes are running on your computer right now?
    %br/
  %br/
  %br/
  %h4 Topic: Environment variables:
  %section.round_corner15px.background_color_eee  
    Estimated Duration: 15 min
    %p
      We inspect and discuss the files listed below:
    %ul
      %li .bashrc
      %li .bash_profile
      %li .profile
    %p
      We try and discuss the shell commands listed below:
    .bashcmd
      echo
      %br/
      env
      %br/
      export
      %br/
      unset
      %br/
    %br/
    %p.bold Environment variables:
    .bashcmd
      $HOME
      %br/
      $PATH
      %br/
      $PS1
      %br/
      $DISPLAY
      %br/
      $RAILS_ENV
      %br/
      $EDITOR
      %br/
    %br/
    %p.bold Quiz:
    %ul  
      %li How do I see my environment variables in sorted order?
      %li Why is changing PATH dangerous?
      %li How do I protect myself from PATH mistakes?
      %li How do I add "/tmp/bin" to end of my PATH?
      %li How do I add "/tmp/bin" to beginning of my PATH?
      %li How do I remove "/tmp/bin" from my PATH?
      %li How do I make my shell prompt display the current time?
      %li What are 3 typical values for RAILS_ENV?
      %li What type of software depends on DISPLAY?
    %br/
%br/
%p
  So that completes my rough outline of "Bash Class".
  After I teach it a few times I'm sure it will change.
  Also I'll have a better idea about what the durations should be for each topic.

%p
  Stay tuned for the outline of my class: "Effective Editors".
%br/
