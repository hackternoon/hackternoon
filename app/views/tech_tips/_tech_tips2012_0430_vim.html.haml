%h3#h3_2012_0430 2012-04-30 Rails Prerequesite: Effective Editor (Vim)

%h3 Topics covered in my Vim Class
.bash_class
  %ul
    %li Introduction: Vi and Vim
    %li
      Why do I like Vim?
      %ul
        %li Vim is free; some editors are not.  For example, TextMate is not free.
        %li Vim runs on Linux, Mac, and Windows.
        %li On Linux and Mac, Vim is bundled with the OS; I don't need to install it.
        %li Vim has an excellent "built-in" tutorial.
    %li
      Why do I not like Vim?
      %ul
        %li Vim has a "command" mode which entices me to think it is in "insert" mode
        %li
          I think of Vim as running inside the shell which interests me.
          I prefer my editor to contain the shell which interests me.
          Since Vim runs inside the shell I use one set of commands for Vim and another set for the shell.
          On the other hand if I run the shell inside the editor (Emacs offers this feature),
          many of the commands (search for example) which work in the editor will work in the shell.
          This reduces "Mental Context Switching" which allows my mind to code faster.
    %li
      Notes about keyboard keys:
      %ul
        %li Ctrl, When you press this, do hold it down.
        %li Esc, When you press this, do it for an instant. Do not hold it down.

    %li
      Vim command modes 1 and 2
      %ul
        %li I enter command mode by pressing Esc.
        %li
          If I'm already in command mode but I'm not sure that I am, I ensure I'm in command mode by pressing Esc.
          I encounter no harm if I press Esc 5 times in a row.
        %li
          I refer to this command mode as "command mode 1".
          I can go to another command mode "command mode 2", by pressing the colon key.


    %li
      Vim command mode 1
      %ul
        %li I enter command mode 1 by pressing Esc
        %li Most commands are only 1 character which helps you code faster
        %li I use command mode 1 mostly for navigation around my document and deleting text
        %li The next line command: j or "plus-sign" or Enter (my preference)
        %li The previous line command: k or "minus-sign"
        %li Move right: space-bar or l
        %li Move left: h
        %li Move right 1 word: w
        %li Move left 1 word: b
        %li Erase a character: x
        %li Erase a word: dw
        %li Erase a line: dd
        %li Repeat my last command: . (You might not see it. It is just a period.)
        %li Undo my last command: u
        %li Move to top of document: [[
        %li Move to bottom of document: ]]
        %li Leave command mode 1, go to insert mode: i (This "inserts" text before the cursor)
        %li Leave command mode 1, go to insert mode: a (This "appends" text after the cursor)
        %li Leave command mode 1, go to insert mode: o (This "appends" text after the current line)

    %li
      Vim command mode 1 commands which require I press enter after the command:
      %ul
        %li Search: /something (To repeat last search: n)
        %li Erase 4 lines: d4










